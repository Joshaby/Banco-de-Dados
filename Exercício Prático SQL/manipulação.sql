SELECT nome, RG, datanasc FROM dependente WHERE sexo LIKE "F";
SELECT DISTINCT salario FROM professor ORDER BY salario DESC;
UPDATE projeto SET nome = "Aplicações de Big Data" WHERE nome = "Aplicações do NoSQL";
SELECT matricula, nome FROM professor WHERE datanasc >= "1970-01-01" ORDER BY nome ASC;
SELECT * FROM professor WHERE datanasc BETWEEN "1979-12-31" AND "1990-01-01" AND snome LIKE "%Pereira%" ORDER BY nome DESC;
SELECT MIN(datanasc), nome, datanasc FROM dependente;
SELECT nome, matricula FROM professor WHERE sexo LIKE "F" AND nome LIKE "%Maria%" ORDER BY nome ASC;
SELECT depto, COUNT(*) AS "Quantidade de projetos" FROM projeto GROUP BY depto;
SELECT AVG(salario) AS "Média de salário" FROM professor WHERE salario BETWEEN 4000 AND 7000 AND NOT depto = 121 AND NOT depto = 125;
SELECT D.codigo, COUNT(*) AS "Quantidade de professores" FROM departamento D, professor P WHERE D.codigo = P.depto GROUP BY D.codigo HAVING COUNT(*) > 2;
SELECT D.codigo, COUNT(*) AS "Quantidade de projetos" FROM departamento D INNER JOIN professor P ON D.codigo = P.depto GROUP BY D.codigo HAVING COUNT(*) > 2;
SELECT P.nome, P.snome, P.matricula FROM professor P, departamento D WHERE P.depto = D.codigo AND D.nome = "Eng. Computação";
SELECT P.nome, P.snome, P.matricula FROM professor P INNER JOIN departamento D ON D.codigo = P.depto WHERE D.nome = "Eng. Computação";
SELECT E.email FROM professor P, email E WHERE P.matricula = E.matricprof AND P.nome LIKE "João Carlos";
SELECT E.email FROM professor P INNER JOIN email E ON P.matricula = E.matricprof WHERE P.nome LIKE "João Carlos";
SELECT P.nome FROM professor P, departamento D WHERE P.matricula = D.coordenador AND D.nome LIKE "Tec. Telemática";
SELECT P.nome FROM professor P INNER JOIN departamento D ON P.matricula = D.coordenador  WHERE D.nome LIKE "Tec. Telemática";
SELECT P.nome FROM professor P WHERE NOT EXISTS (SELECT * FROM dependente D WHERE P.matricula = D.matricprof);
SELECT P.nome FROM professor P, dependente D WHERE P.matricula = D.matricprof GROUP BY P.nome HAVING COUNT(*) >= 3;
SELECT P.nome FROM professor P INNER JOIN dependente D ON P.matricula = D.matricprof GROUP BY P.nome HAVING COUNT(*) >=3;
